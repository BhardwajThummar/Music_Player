{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bhardwaj\\\\Documents\\\\work\\\\Learning\\\\REACT\\\\react-player\\\\src\\\\components\\\\Player.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/node_modules/@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  setIsPlaying,\n  isPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs\n}) => {\n  const activeLibraryHandler = nextPrevious => {\n    const newSongs = songs.map(song => {\n      if (song.id === nextPrevious.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }; //Event Handlers\n\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = async direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    ;\n\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n\n      ;\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n\n    ;\n    if (isPlaying) audioRef.current.play();\n  }; //Add Styles\n\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`\n        },\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          min: 0,\n          max: songInfo.duration || 0,\n          onChange: dragHandler,\n          value: songInfo.currentTime,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faPause","faAngleLeft","faAngleRight","Player","audioRef","currentSong","setIsPlaying","isPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrevious","newSongs","map","song","id","active","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","background","color","duration"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from \"C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/node_modules/@fortawesome/react-fontawesome\";\r\nimport {faPlay,faPause,faAngleLeft,faAngleRight} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({audioRef,currentSong,setIsPlaying,isPlaying,setSongInfo,songInfo,songs,setCurrentSong,setSongs}) => {\r\n    const activeLibraryHandler = (nextPrevious) => {\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === nextPrevious.id){\r\n                return{\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value});\r\n    };\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === 'skip-forward') {\r\n           await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n           activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        };\r\n        if(direction === 'skip-back') {\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            };  \r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n        };\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n    //Add Styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`,\r\n    };\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,}}className=\"track\">                \r\n                <input min={0} max={songInfo.duration || 0} onChange={dragHandler} value={songInfo.currentTime} type=\"range\"/>\r\n                <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\" }</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} /> \r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler} \r\n                    className=\"play\" \r\n                    size=\"2x\" \r\n                    icon={isPlaying ? faPause : faPlay}\r\n                    />\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}