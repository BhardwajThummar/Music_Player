{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bhardwaj\\\\Documents\\\\work\\\\Learning\\\\REACT\\\\react-player\\\\src\\\\components\\\\Player.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/node_modules/@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  setIsPlaying,\n  isPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong\n}) => {\n  //Event Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      setCurrentSong(songs[currentIndex = 1]);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: getTime(songInfo.currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration || 0,\n        onChange: dragHandler,\n        value: songInfo.currentTime,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: getTime(songInfo.duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faPause","faAngleLeft","faAngleRight","Player","audioRef","currentSong","setIsPlaying","isPlaying","setSongInfo","songInfo","songs","setCurrentSong","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","song","id","duration"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,0GAAhC;AACA,SAAQC,MAAR,EAAeC,OAAf,EAAuBC,WAAvB,EAAmCC,YAAnC,QAAsD,mCAAtD;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,WAAV;AAAsBC,EAAAA,YAAtB;AAAmCC,EAAAA,SAAnC;AAA6CC,EAAAA,WAA7C;AAAyDC,EAAAA,QAAzD;AAAkEC,EAAAA,KAAlE;AAAwEC,EAAAA;AAAxE,CAAD,KAA6F;AACxG;AACA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIL,SAAJ,EAAe;AACXH,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,KAAjB;AACAR,MAAAA,YAAY,CAAC,CAACC,SAAF,CAAZ;AACH,KAHD,MAGK;AACDH,MAAAA,QAAQ,CAACS,OAAT,CAAiBE,IAAjB;AACAT,MAAAA,YAAY,CAAC,CAACC,SAAF,CAAZ;AACH;AACJ,GARD;;AASA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACtB,WACIC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,IAAwB,GAAxB,GAA8B,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,CAAP,EAA8BG,KAA9B,CAAoC,CAAC,CAArC,CADlC;AAGH,GAJD;;AAKA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBlB,IAAAA,QAAQ,CAACS,OAAT,CAAiBU,WAAjB,GAA+BD,CAAC,CAACE,MAAF,CAASC,KAAxC;AACAjB,IAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AAAcc,MAAAA,WAAW,EAAED,CAAC,CAACE,MAAF,CAASC;AAApC,KAAD,CAAX;AACH,GAHD;;AAIA,QAAMC,gBAAgB,GAAIC,SAAD,IAAe;AACpC,QAAIC,YAAY,GAAGlB,KAAK,CAACmB,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAY1B,WAAW,CAAC0B,EAAlD,CAAnB;;AACA,QAAGJ,SAAS,KAAK,cAAjB,EAAiC;AAC7BhB,MAAAA,cAAc,CAACD,KAAK,CAACkB,YAAY,GAAG,CAAhB,CAAN,CAAd;AACH;;AAAA;AACJ,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA,+BAAG;AAAA,oBAAIZ,OAAO,CAACP,QAAQ,CAACc,WAAV;AAAX;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,GAAG,EAAE,CAAZ;AAAe,QAAA,GAAG,EAAEd,QAAQ,CAACuB,QAAT,IAAqB,CAAzC;AAA4C,QAAA,QAAQ,EAAEX,WAAtD;AAAmE,QAAA,KAAK,EAAEZ,QAAQ,CAACc,WAAnF;AAAgG,QAAA,IAAI,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BAAG;AAAA,oBAAIP,OAAO,CAACP,QAAQ,CAACuB,QAAV;AAAX;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,MAAMN,gBAAgB,CAAC,WAAD,CAAhD;AAA+D,QAAA,SAAS,EAAC,WAAzE;AAAqF,QAAA,IAAI,EAAC,IAA1F;AAA+F,QAAA,IAAI,EAAEzB;AAArG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,eAAD;AACI,QAAA,OAAO,EAAEW,eADb;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,IAAI,EAAC,IAHT;AAII,QAAA,IAAI,EAAEL,SAAS,GAAGP,OAAH,GAAaD;AAJhC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,MAAM2B,gBAAgB,CAAC,cAAD,CAAhD;AAAkE,QAAA,SAAS,EAAC,cAA5E;AAA2F,QAAA,IAAI,EAAC,IAAhG;AAAqG,QAAA,IAAI,EAAExB;AAA3G;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7CD;;KAAMC,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from \"C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/node_modules/@fortawesome/react-fontawesome\";\r\nimport {faPlay,faPause,faAngleLeft,faAngleRight} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({audioRef,currentSong,setIsPlaying,isPlaying,setSongInfo,songInfo,songs,setCurrentSong}) => {\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value});\r\n    };\r\n    const skipTrackHandler = (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === 'skip-forward') {\r\n            setCurrentSong(songs[currentIndex = 1]);\r\n        };\r\n    };\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p><b>{getTime(songInfo.currentTime)}</b></p>\r\n                <input min={0} max={songInfo.duration || 0} onChange={dragHandler} value={songInfo.currentTime} type=\"range\"  />\r\n                <p><b>{getTime(songInfo.duration)}</b></p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} /> \r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler} \r\n                    className=\"play\" \r\n                    size=\"2x\" \r\n                    icon={isPlaying ? faPause : faPlay}\r\n                    />\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}