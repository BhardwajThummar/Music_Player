{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bhardwaj\\\\Documents\\\\work\\\\Learning\\\\REACT\\\\react-player\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { IoPlayOutline, IoPlaySkipForwardOutline, IoPlaySkipBackOutline } from \"react-icons/all\";\n\nconst Player = ({\n  currentSong,\n  setIsPlaying,\n  isPlaying\n}) => {\n  _s();\n\n  //Ref\n  const audioRef = useRef(null); //Event Handlers\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const timeUpdateHandler = () => {}; //State\n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(IoPlaySkipBackOutline, {\n        className: \"skip-back\",\n        size: \"2rem\",\n        icon: IoPlaySkipBackOutline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IoPlayOutline, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2rem\",\n        icon: IoPlayOutline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IoPlaySkipForwardOutline, {\n        className: \"skip-back\",\n        size: \"2rem\",\n        icon: IoPlaySkipForwardOutline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"otqdE/UylHC+Jb0mw3r2ZtXbLxc=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/src/components/Player.js"],"names":["React","useRef","useState","IoPlayOutline","IoPlaySkipForwardOutline","IoPlaySkipBackOutline","Player","currentSong","setIsPlaying","isPlaying","audioRef","playSongHandler","current","pause","play","timeUpdateHandler","songInfo","setSongInfo","currentTime","duration","audio"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,aAAR,EAAsBC,wBAAtB,EAA+CC,qBAA/C,QAA2E,iBAA3E;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaC,EAAAA,YAAb;AAA0BC,EAAAA;AAA1B,CAAD,KAA0C;AAAA;;AACrD;AACA,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB,CAFqD,CAGrD;;AACA,QAAMU,eAAe,GAAG,MAAM;AAC1B,QAAIF,SAAJ,EAAe;AACXC,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAL,MAAAA,YAAY,CAAC,CAACC,SAAF,CAAZ;AACH,KAHD,MAGK;AACDC,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAN,MAAAA,YAAY,CAAC,CAACC,SAAF,CAAZ;AACH;AACJ,GARD;;AASA,QAAMM,iBAAiB,GAAG,MAAM,CAE/B,CAFD,CAbqD,CAgBrD;;;AACA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBf,QAAQ,CAAC;AACpCgB,IAAAA,WAAW,EAAE,IADuB;AAEpCC,IAAAA,QAAQ,EAAE;AAF0B,GAAD,CAAvC;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,qBAAD;AAAuB,QAAA,SAAS,EAAC,WAAjC;AAA6C,QAAA,IAAI,EAAC,MAAlD;AAAyD,QAAA,IAAI,EAAEd;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEM,eAAxB;AAAyC,QAAA,SAAS,EAAC,MAAnD;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,IAAI,EAAER;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,wBAAD;AAA0B,QAAA,SAAS,EAAC,WAApC;AAAgD,QAAA,IAAI,EAAC,MAArD;AAA4D,QAAA,IAAI,EAAEC;AAAlE;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAO,MAAA,YAAY,EAAEW,iBAArB;AAAwC,MAAA,GAAG,EAAEL,QAA7C;AAAuD,MAAA,GAAG,EAAEH,WAAW,CAACa;AAAxE;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD;;GAAMd,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import React, {useRef} from 'react';\r\nimport { useState } from 'react';\r\nimport {IoPlayOutline,IoPlaySkipForwardOutline,IoPlaySkipBackOutline} from \"react-icons/all\";\r\n\r\nconst Player = ({currentSong,setIsPlaying,isPlaying}) => {\r\n    //Ref\r\n    const audioRef = useRef(null);\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    const timeUpdateHandler = () => {\r\n\r\n    }\r\n    //State\r\n    const [songInfo,setSongInfo] = useState({\r\n        currentTime: null,\r\n        duration: null,\r\n    });\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>Start Time</p>\r\n                <input type=\"range\"  />\r\n                <p>End Time</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <IoPlaySkipBackOutline className=\"skip-back\" size=\"2rem\" icon={IoPlaySkipBackOutline}/> \r\n                <IoPlayOutline onClick={playSongHandler} className=\"play\" size=\"2rem\" icon={IoPlayOutline}/>\r\n                <IoPlaySkipForwardOutline className=\"skip-back\" size=\"2rem\" icon={IoPlaySkipForwardOutline}/>\r\n            </div>\r\n            <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}