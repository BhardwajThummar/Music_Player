{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bhardwaj\\\\Documents\\\\work\\\\Learning\\\\REACT\\\\react-player\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from \"C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/node_modules/@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { playAudio } from '../util';\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  setIsPlaying,\n  isPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs\n}) => {\n  _s();\n\n  //UseEffect\n  useEffect(() => {\n    //Add Active State\n    const newSongs = songs.map(song => {\n      if (song.id === currentSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]); //Event Handlers\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    ;\n\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        return;\n      }\n\n      ;\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n\n    ;\n    playAudio(isPlaying, audioRef);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: getTime(songInfo.currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration || 0,\n        onChange: dragHandler,\n        value: songInfo.currentTime,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: getTime(songInfo.duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/src/components/Player.js"],"names":["React","useEffect","FontAwesomeIcon","faPlay","faPause","faAngleLeft","faAngleRight","playAudio","Player","audioRef","currentSong","setIsPlaying","isPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","newSongs","map","song","id","active","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","length","duration"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { FontAwesomeIcon } from \"C:/Users/Bhardwaj/Documents/work/Learning/REACT/react-player/node_modules/@fortawesome/react-fontawesome\";\r\nimport {faPlay,faPause,faAngleLeft,faAngleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport {playAudio} from '../util';\r\n\r\nconst Player = ({audioRef,currentSong,setIsPlaying,isPlaying,setSongInfo,songInfo,songs,setCurrentSong,setSongs}) => {\r\n    //UseEffect\r\n    useEffect(() => {\r\n        //Add Active State\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === currentSong.id){\r\n                return{\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    },[currentSong]);\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value});\r\n    };\r\n    const skipTrackHandler = (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === 'skip-forward') {\r\n            setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n        };\r\n        if(direction === 'skip-back') {\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                setCurrentSong(songs[songs.length - 1]);\r\n                return;\r\n            };\r\n            setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n        };\r\n        playAudio(isPlaying,audioRef);\r\n    };\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p><b>{getTime(songInfo.currentTime)}</b></p>\r\n                <input min={0} max={songInfo.duration || 0} onChange={dragHandler} value={songInfo.currentTime} type=\"range\"  />\r\n                <p><b>{getTime(songInfo.duration)}</b></p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} /> \r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler} \r\n                    className=\"play\" \r\n                    size=\"2x\" \r\n                    icon={isPlaying ? faPause : faPlay}\r\n                    />\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}